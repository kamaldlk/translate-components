{"version":3,"sources":["../src/getTranslations.js"],"names":["openTag","closeTag","file","output","languages","readFile","err","data","console","log","regexp","results","match","texts","getTexts","template","JSON","stringify","writeFile","map","openTagPosition","result","indexOf","closeTagPosition","text","substr","length","addLanguages","object","language"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,UAAU,aAAhB;AACA,IAAMC,WAAW,cAAjB;;kBAEe,UAACC,IAAD,EAAOC,MAAP,EAAeC,SAAf,EAA6B;AAC1C,eAAGC,QAAH,CAAYH,IAAZ,EAAkB,MAAlB,EAA0B,UAACI,GAAD,EAAMC,IAAN,EAAe;AACvC,QAAID,GAAJ,EAASE,QAAQC,GAAR,CAAYH,GAAZ;AACT,QAAII,SAAS,kCAAb;AACA,QAAIC,UAAUJ,KAAKK,KAAL,CAAWF,MAAX,CAAd;AACA,QAAIG,QAAQC,SAASH,OAAT,EAAkBP,SAAlB,CAAZ;AACA,QAAMW,+BAA6BC,KAAKC,SAAL,CAAeJ,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAnC;AACA,iBAAGK,SAAH,CAAaf,MAAb,EAAqBY,QAArB,EAA+B,eAAO;AACpC,UAAIT,GAAJ,EAASE,QAAQC,GAAR,CAAYH,GAAZ;AACTE,cAAQC,GAAR,CAAY,4BAAZ;AACD,KAHD;AAID,GAVD;AAWD,C;;AAED,SAASK,QAAT,CAAkBH,OAAlB,EAA2BP,SAA3B,EAAsC;AACpC,MAAIS,QAAQ,EAAZ;AACAF,UAAQQ,GAAR,CAAY,kBAAU;AACpB,QAAIC,kBAAkBC,OAAOC,OAAP,CAAetB,OAAf,CAAtB;AACA,QAAIuB,mBAAmBF,OAAOC,OAAP,CAAerB,QAAf,CAAvB;AACA,QAAIuB,OAAOH,OAAOI,MAAP,CAAcL,kBAAkBpB,QAAQ0B,MAAxC,EAAgDH,oBAAoBtB,SAASyB,MAAT,GAAkB,CAAtC,CAAhD,CAAX;AACAb,UAAMW,IAAN,IAAcG,aAAaH,IAAb,EAAmBpB,SAAnB,CAAd;AACD,GALD;AAMA,SAAOS,KAAP;AACD;;AAED,SAASc,YAAT,CAAsBH,IAAtB,EAA4BpB,SAA5B,EAAuC;AACrC,MAAIA,aAAaA,UAAUsB,MAA3B,EAAmC;AACjC,QAAIE,SAAS,EAAb;AACAxB,cAAUe,GAAV,CAAc,oBAAY;AACxBS,aAAOC,QAAP,IAAmB,EAAnB;AACD,KAFD;AAGA,WAAOD,MAAP;AACD,GAND,MAMO;AACL,WAAO,EAAP;AACD;AACF","file":"getTranslations.js","sourcesContent":["import fs from 'fs'\n\nconst openTag = '<Translate>'\nconst closeTag = '</Translate>'\n\nexport default (file, output, languages) => {\n  fs.readFile(file, 'utf8', (err, data) => {\n    if (err) console.log(err)\n    let regexp = /<Translate>.[^<>]*<\\/Translate>/g\n    let results = data.match(regexp)\n    let texts = getTexts(results, languages)\n    const template = `export default ${JSON.stringify(texts, null, 2)}`\n    fs.writeFile(output, template, err => {\n      if (err) console.log(err)\n      console.log('Translations file created!')\n    })\n  })\n}\n\nfunction getTexts(results, languages) {\n  let texts = {}\n  results.map(result => {\n    let openTagPosition = result.indexOf(openTag)\n    let closeTagPosition = result.indexOf(closeTag)\n    let text = result.substr(openTagPosition + openTag.length, closeTagPosition - (closeTag.length - 1))\n    texts[text] = addLanguages(text, languages)\n  })\n  return texts\n}\n\nfunction addLanguages(text, languages) {\n  if (languages && languages.length) {\n    let object = {}\n    languages.map(language => {\n      object[language] = \"\"\n    })\n    return object\n  } else {\n    return {}\n  }\n}\n"]}